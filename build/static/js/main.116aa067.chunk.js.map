{"version":3,"sources":["components/SearchBar.js","components/IssueItem.js","components/IssueList.js","App.js","index.js"],"names":["SearchBar","onFormSubmit","useState","term","setTerm","className","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","IssueItem","issue","href","html_url","rel","title","description","IssueList","renderedList","issues","map","id","App","setIssues","useEffect","document","repo","issuesURL","console","log","fetch","then","res","json","response","ReactDOM","render","getElementById"],"mappings":"yKA+BeA,MA3Bf,YAAsC,IAAjBC,EAAgB,EAAhBA,aAEnB,EAAwBC,mBAAS,oBAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAQA,OACE,qBAAKC,UAAU,wBAAf,SACE,sBAAMA,UAAU,UAAUC,SARb,SAACC,GAChBA,EAAEC,iBAEFP,EAAaE,IAKX,SACE,sBAAKE,UAAU,QAAf,UACE,2DACA,uBACEI,KAAK,OACLC,MAAOP,EACPQ,SAAU,SAACJ,GAAD,OAAOH,EAAQG,EAAEK,OAAOF,QAClCG,YAAY,2BCATC,EAnBG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnB,OACE,sBAAKV,UAAU,OAAf,UACE,mBAAGA,UAAU,qCACb,sBAAKA,UAAU,UAAf,UACE,mBACEA,UAAU,SACVW,KAAMD,EAAME,SACZL,OAAO,SACPM,IAAI,aAJN,SAMGH,EAAMI,QAET,qBAAKd,UAAU,cAAf,SAA8BU,EAAMK,qBCH7BC,EAVG,SAAC,GAAgB,IAE3BC,EAF0B,EAAbC,OAESC,KAAI,SAACT,GAC/B,OAAO,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAMU,OAI/B,OAAO,qBAAKpB,UAAU,0BAAf,SAA0CiB,KC4BpCI,MAlCf,WAEE,MAA4BxB,mBAAS,IAArC,mBAAOqB,EAAP,KAAeI,EAAf,KAiBA,OAbAC,qBAAU,WACRC,SAASV,MAAQ,kBAChB,IAYD,sBAAKd,UAAU,eAAf,UAEE,cAAC,EAAD,CAAWJ,aAXO,SAAC6B,GACrB,IAAIC,EAAS,uCAAmCD,EAAnC,yBACbE,QAAQC,IAAI,YAAaF,GACzBG,MAAMH,GACHI,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAcX,EAAUW,SAO9B,qBAAKjC,UAAU,UAAf,SACE,qBAAKA,UAAU,SAAf,SACE,qBAAKA,UAAU,qBAAf,SACE,cAAC,EAAD,CAAWkB,OAAQA,cC3B/BgB,IAASC,OAAO,cAAC,EAAD,IAASX,SAASY,eAAe,W","file":"static/js/main.116aa067.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\n// We take our props object and assign each property to it's own variable name.\n// In this case we only passed one prop, `onFormSubmit`\nfunction SearchBar({ onFormSubmit }) {\n  // Our state variable for the search term. Defaults to \"microsoft/vscode\".\n  const [term, setTerm] = useState('microsoft/vscode');\n\n  const sendTerm = (e) => {\n    e.preventDefault();\n\n    onFormSubmit(term);\n  };\n\n  return (\n    <div className=\"search-bar ui segment\">\n      <form className=\"ui form\" onSubmit={sendTerm}>\n        <div className=\"field\">\n          <label>Retrieve GitHub Issues</label>\n          <input\n            type=\"text\"\n            value={term}\n            onChange={(e) => setTerm(e.target.value)}\n            placeholder=\"facebook/react\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default SearchBar;\n","import React from 'react';\n\n// Issue item accepts a single issue as a prop\n// This component is solely responsible for displaying the specific information for a given issue\nconst IssueItem = ({ issue }) => {\n  return (\n    <div className=\"item\">\n      <i className=\"large github middle aligned icon\"></i>\n      <div className=\"content\">\n        <a\n          className=\"header\"\n          href={issue.html_url}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          {issue.title}\n        </a>\n        <div className=\"description\">{issue.description}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default IssueItem;\n","import React from 'react';\nimport IssueItem from '../components/IssueItem';\n\n// Here we accept an array of issues as a prop\nconst IssueList = ({ issues }) => {\n  // We create a list of rendered IssueItems by using the map method on `issues`\n  const renderedList = issues.map((issue) => {\n    return <IssueItem key={issue.id} issue={issue} />;\n  });\n\n  // Here we return our array of IssueItems wrapped inside a parent div\n  return <div className=\"ui relaxed divided list\">{renderedList}</div>;\n};\n\nexport default IssueList;\n","// We import useState and useEffect in our component\nimport React, { useState, useEffect } from 'react';\nimport SearchBar from './components/SearchBar';\nimport IssueList from './components/IssueList';\n\nfunction App() {\n  // We declare a state variable that is an array called `issues` and a function to update it.\n  const [issues, setIssues] = useState([]);\n\n  // When the page loads, set the document title to something specific to this app.\n  // This only runs once because of our empty dependency array.\n  useEffect(() => {\n    document.title = 'GitHub issues';\n  }, []);\n\n  // Helper function that performs an API request and sets the `issues` array to a list of issues from GitHub\n  const getRepoIssues = (repo) => {\n    let issuesURL = `https://api.github.com/repos/${repo}/issues?direction=asc`;\n    console.log('issuesURL', issuesURL);\n    fetch(issuesURL)\n      .then((res) => res.json())\n      .then((response) => setIssues(response));\n  };\n\n  return (\n    <div className=\"ui container\">\n      {/* Here we pass our getRepoIssues function as a prop to SearchBar */}\n      <SearchBar onFormSubmit={getRepoIssues} />\n      <div className=\"ui grid\">\n        <div className=\"ui row\">\n          <div className=\"eleven wide column\">\n            <IssueList issues={issues} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}